name: 'Build'
description: 'Builds the GOAP Bot Project'
inputs:
  repo-path:  
    description: 'Path to the plugin project source'
    required: true
runs:
  pre: sudo apt-get install cxxtest clang gcc-multilib g++-multilib
  pre-if: runner.os == 'ubuntu-20.04'
  
  using: "composite"
  steps:
    - name: Checkout HL2SDK 
      uses: actions/checkout@v2
      with:
        repository: taiyungwang/hl2sdk      
        ref: sdk2013
        path: hl2sdk
    - name: Checkout Plugin Navmesh lib
      uses: actions/checkout@v2
      with:
        repository: taiyungwang/valve_source_plugin_navmesh
        ref: master
        path: valve_source_plugin_navmesh      
    - name: Configure CMake for Navmesh Lib
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -S ${{github.workspace}}/valve_source_plugin_navmesh -B ${{github.workspace}}/build/valve_source_plugin_navmesh -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
      env: # specify compiler
        CC: clang
        CXX: clang++
        BUILD_TYPE: Release        
      shell: bash

    - name: Build the NavMesh Lib
      # Build your program with the given configuration
      env: # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
        BUILD_TYPE: Release
      run: cmake --build ${{github.workspace}}/build/valve_source_plugin_navmesh --config ${{env.BUILD_TYPE}}
      shell: bash      
      
    - name: Configure CMake for Bot Plugin
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -S ${{github.workspace}}/${{ inputs.repo-path }} -B ${{github.workspace}}/build/${{ inputs.repo-path }} -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
      env: # specify compiler
        CC: clang
        CXX: clang++
        BUILD_TYPE: Release        
      shell: bash

    - name: Build
      # Build your program with the given configuration
      env: # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
        BUILD_TYPE: Release
      run: cmake --build ${{github.workspace}}/build/${{ inputs.repo-path }} --config ${{env.BUILD_TYPE}}
      shell: bash
