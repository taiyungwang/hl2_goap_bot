name: 'Build'
description: 'Builds the GOAP Bot Project'
inputs:
  repo-path:  
    description: 'Path to the plugin project source'
    required: true
runs:
  using: "composite"
  steps:
    - name: Install Dependent packages
      run: |
        if [ $RUNNER_OS = Windows ] then;
          choco install wget
          wget https://github.com/CxxTest/cxxtest/releases/download/4.4/cxxtest-4.4.tar.gz && tar xvzf cxxtest-4.4.tar.gz -C /c/;
        fi        
      shell: bash    
    - name: Checkout HL2SDK 
      uses: actions/checkout@v4
      with:
        repository: alliedmodders/hl2sdk      
        ref: tf2_sdk2013
        path: hl2sdk
    - name: Checkout Plugin Navmesh lib
      uses: actions/checkout@v4
      with:
        repository: taiyungwang/valve_source_plugin_navmesh
        ref: master
        path: valve_source_plugin_navmesh
    - name: Checkout Metamod Source
      uses: actions/checkout@v4
      with:
        repository: alliedmodders/metamod-source
        ref: master
        path: metamod-source
    - name: Configure CMake for Bot Plugin
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -S "${{ github.workspace }}/${{ inputs.repo-path }}" $([ $RUNNER_OS = Windows ] && printf %s '-A Win32' ) -B "${{ github.workspace }}/build/${{ inputs.repo-path }}" -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }}
      env: # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)    
        BUILD_TYPE: Release        
      shell: bash
    - name: Build Bot plugin.
      # Build your program with the given configuration
      env: # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
        BUILD_TYPE: Release
      run: cmake --build "${{ github.workspace }}/build/${{ inputs.repo-path }}" --config ${{ env.BUILD_TYPE }}
      shell: bash
